dx = {-1, 1, 0, 0}; 
dy = {0, 0, -1, 1};
n = 6
m = 5
------------------------------------------------
i=0, j=0
if(map[i][j]==1 && !visited[i][j]) -> map[0][0]=1 && visited[0][0]=0 -> O
dfs(0,0)
visited[0][0]=true;
nowSize=1

for i= 0
	nx = 0 + dx[0] = 0 + -1 = -1
	ny = 0 + dy[0] = 0 + 0 = 0

	1번-if(nx>=0 && nx<n && ny>=0 && ny < m) -> X
	
	i=1
	nx = 0 + dx[1] = 0 + 1 = 1
	ny = 0 + dy[1] = 0 + 0 = 0
	1번-if -> O
		2번-if(map[nx][ny]==1&&!visited[nx][ny]) -> map[1][0]=0 ->X

	i=2
	nx = 0 + dx[2] = 0 + 0 = 0
	ny = 0 + dy[2] = 0 + -1 = -1
	
	1번-if -> X

	i=3
	nx = 0 + dx[3] = 0 + 0 = 0
	ny = 0 + dy[3] = 0 + 1 = 1;
	1번-if -> O
		2번-if -> map[0][1]=1 && visited[0][1]=0 -> O
		dfs(0,1)

		visited[0][1]=true;   -------------------------------------------> visited00 / 01 true
		nowsize=2

		for i = 0
			nx = 0 + dx[0] = 0 + -1 = -1
			ny = 1 + dy[0] = 1 + 0 = 1
			1번-if -> X

			i=1
			nx = 0 + dx[1] = 0 + 1 = 1
			ny = 1 + dy[1] = 1 + 0 = 1

			1번-if -> O
				2번-if -> map[1][1]=1 && visited[1][1]=0 -> O
				dfs(1,1)

				visited[1][1] = true; ------------------------------------------ visited00/01/11 true
				nowsize=3

				for i = 0
					nx = 1 + dx[i] = 1 - 1 = 0
					ny = 1 + dy[0] = 1 + 0 = 1
					1번-if -> O
						2번-if-> map[0,1]=1 && visited[0][1]=1 -> X
					i=1
					nx = 1 + dx[1] = 1 + 1 = 2
					ny = 1 + dx[1] = 1 + 0 = 1
					1번-if -> O
						2번-if -> map[2,1]=0 -> X
					i=2
					nx = 1 + dx[2] = 1 + 0 = 1
					ny = 1 + dy[2] = 1 + -1 = 0
					1번-if -> O
						2번-if -> map[1][0]=0 -> X
					i=3
					nx = 1 + dx[3] = 1 + 0 = 1
					ny = 1 + dy[3] = 1 + 1 = 2
					1번-if - > O
						2번-if -> max[1][2]=1 && visited[1][2]=0 => O
						dfs(1,2)

						visited[1][2] = true; -------------------------------visited 00/01/11/12 true
						nowsize = 4 

						for i=0
							nx = 1 + dx[0] = 1 - 1 = 0
							ny = 2 + dx[0] = 2 + 0 = 2
							1번-if -> O
								2번-if-> map[0,2]=0 -> X
							i=1
							nx = 1 + dx[1] = 1 + 1 = 2
							ny = 2 + dx[1] = 2 + 0 = 2
							1번-if -> O
								2번-if -> map[2,2]=0 -> X
							i=2
							nx = 1 + dx[2] = 1 + 0 = 1
							ny = 2 + dy[2] = 2 + -1 = 1
							1번-if -> O
								2번-if -> map[1][1]=1 && visited[1][1]=1 -> X
							i=3
							nx = 1 + dx[3] = 1 + 0 = 1
							ny = 2 + dy[3] = 2 + 1 = 3
							1번-if - > O
								2번-if -> map[1][3]=0 -> X
							for문 끝 + dfs 끝
								cntPic = 1
								if(nowSize > maxSize) -> maxSize = 4
									j=1 
									if(map[0][1]=1 && visited[0][1]=1) -> X
										j=2
										~~~~~~
							





	
	